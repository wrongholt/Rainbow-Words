'use strict';

const CONSTANTS = require('@src/utils/constants');

const EMPTY_HEADERS = {};
const EMPTY_QUERY_PARAMS = {};
const NULL_PAYLOAD = null;

module.exports = (smapiHandle) => {

    function invokeSkill(skillId, invokePayload, endpointRegion, callback) {
        const url = `skills/${skillId}/invocations`;
        const payload = {
            endpointRegion: endpointRegion,
            skillRequest: invokePayload
        };
        smapiHandle(
            CONSTANTS.COMMAND.NAME.INVOKE_SKILL,
            CONSTANTS.HTTP_REQUEST.VERB.POST,
            CONSTANTS.SMAPI.VERSION.V1,
            url,
            EMPTY_QUERY_PARAMS,
            EMPTY_HEADERS,
            payload,
            callback
        );
    }

    function simulateSkill(skillId, input, locale, callback) {
        const url = `skills/${skillId}/simulations`;
        const payload = {
            input: {
                content: input
            },
            device: {
                locale: locale
            }
        };
        smapiHandle(
            CONSTANTS.COMMAND.NAME.SIMULATE_SKILL,
            CONSTANTS.HTTP_REQUEST.VERB.POST,
            CONSTANTS.SMAPI.VERSION.V1,
            url,
            EMPTY_QUERY_PARAMS,
            EMPTY_HEADERS,
            payload,
            callback
        );
    }

    function getSimulation(skillId, simulationId, callback) {
        const url = `skills/${skillId}/simulations/${simulationId}`;
        smapiHandle(
            CONSTANTS.COMMAND.NAME.GET_SIMULATION,
            CONSTANTS.HTTP_REQUEST.VERB.GET,
            CONSTANTS.SMAPI.VERSION.V1,
            url,
            EMPTY_QUERY_PARAMS,
            EMPTY_HEADERS,
            NULL_PAYLOAD,
            callback
        );
    }

    return {
        invokeSkill: invokeSkill,
        simulateSkill: simulateSkill,
        getSimulation: getSimulation
    };
};
