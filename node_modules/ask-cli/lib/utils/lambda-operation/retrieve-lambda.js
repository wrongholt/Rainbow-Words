'use strict';

const initAWS = require('../init-aws');

module.exports = {
    retrieveLambdaFunction: retrieveLambdaFunction,
    retrieveLambdaRuntime: retrieveLambdaRuntime,
    getLambdaFunction: getLambdaFunction
};

function retrieveLambdaFunction(functionName, region, awsProfile, callback) {
    const aws = initAWS.initAWS(awsProfile);
    if (!aws) {
        return;
    }
    const regionCode = initAWS.resolveRegionCodeFromRegion(region);
    getLambdaFunction(aws, functionName, regionCode, (err, data) => {
        if (err) {
            callback();
        } else {
            callback(data.Configuration.FunctionArn);
        }
    });
}

function retrieveLambdaRuntime(functionName, region, awsProfile, callback) {
    const aws = initAWS.initAWS(awsProfile);
    if (!aws) {
        callback('[Error]: Failed to initialize aws client.', null);
    }
    const regionCode = initAWS.resolveRegionCodeFromRegion(region);
    getLambdaFunction(aws, functionName, regionCode, (err, data) => {
        callback(err, !err ? data.Configuration.Runtime : null);
    });
}

// Private
function getLambdaFunction(aws, functionName, regionCode, callback) {
    const params = {
        FunctionName: functionName
    };
    const lambdaClient = new aws.Lambda({ region: regionCode });
    lambdaClient.getFunction(params, (err, data) => {
        callback(err, data);
    });
}
