'use strict';

const apiWrapper = require('./api-wrapper');
const tools = require('../utils/tools');
const profileHelper = require('../utils/profile-helper');

// Public
module.exports = {
    createCommand: (commander) => {
        buildGetSkillCredentialsCommand(commander);
    }
};

function buildGetSkillCredentialsCommand(commander) {
    commander
        .command('get-skill-credentials')
        .usage('<-s|--skill-id <skill-id>> [-p|--profile <profile>] [--debug]')
        .description('get the skill\'s credentials')
        .option('-s, --skill-id <skill-id>', 'skill-id for the skill')
        .option('-p, --profile <profile>', 'ask cli profile')
        .option('--debug', 'ask cli debug mode')
        .action(handle);

    function handle(options) {
        if (!options.skillId) {
            console.warn('Please input required parameter: skill-id.');
            return;
        }
        const profile = profileHelper.runtimeProfile(options.profile);
        apiWrapper.callGetSkillCredentials(options.skillId, profile, options.debug, (data) => {
            const response = tools.convertDataToJsonObject(data.body);
            if (response) {
                console.log(JSON.stringify(response, null, 2));
            }
        });
    }
}
