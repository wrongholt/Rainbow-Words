'use strict';

const expect = require('chai').expect;
const util = require('util');
const constants = require('./utils/constants');
const cliWrapper = require('./utils/cli-wrapper');
const message = require('./utils/messages');
const responseParser = require('./utils/response-parser');
const fs = require("fs");
let skillId;
const SKILL_FILE = './test/functional/fixture/custom-skill/skill.json';
const TIMEOUT = 80000;

describe('# delete skill tests', function () {
    this.timeout(TIMEOUT);
    before('set up', (done) => {
        this.timeout(TIMEOUT);
        cliWrapper.callCreateSkill(SKILL_FILE, constants.testData.PROFILE, (error, stdout, stderr) => {
            if (error) {
                console.log(`Failed to create skill`);
                done(error);
            } else {
                skillId = responseParser.getSkillID(stdout);
                expect(stdout.startsWith(message.CREATE_SKILL_SUBMITED)).equal(true);
                //check exit code should be 0
                done();
            }
        });
    });


    it('| delete skill with invalid skill id', (done) => {
        cliWrapper.callDeleteSkill(constants.testData.INVALID_SKILL_ID, constants.testData.PROFILE, (error, stdout, stderr) => {
            expect(error);
            expect(stderr.startsWith(message.NOT_FOUND_MSG) > -1).equal(true);
            done();
        });
    });

    it('| delete skill with invalid profile', (done) => {
        cliWrapper.callDeleteSkill(skillId, constants.testData.INVALID_PROFILE, (error, stdout, stderr) => {
            expect(error);
            let errorMessage = util.format(message.INVALID_PROFILE_MSG, constants.INVALID_PROFILE);
            expect(stderr.startsWith(errorMessage) > -1).equal(true);
            done();
        });
    });


    it('| delete skill test', (done) => {
        cliWrapper.callDeleteSkill(skillId, constants.testData.PROFILE, (error, stdout, stderr) => {
            if (error) {
                done(error);
            } else {
                expect(stdout.startsWith(message.DELETE_SKILL) > -1).equal(true);
                // exit code should be 0
                done();
            }
        });
    });

});